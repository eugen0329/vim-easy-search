sudo: required

# https://docs.travis-ci.com/user/reference/linux/#overview
dist: xenial
# https://docs.travis-ci.com/user/reference/osx/#macos-version
osx_image: xcode9


services:
  - xvfb # NOTE: Services are not supported on osx
env: DISPLAY=":99.0" HOMEBREW_NO_AUTO_UPDATE=1

# https://docs.travis-ci.com/user/reference/osx/#ruby-versionsimplementations
# https://docs.travis-ci.com/user/reference/xenial/#ruby-support
rvm: 2.3.8
language: ruby

before_cache:
  - which brew && brew cleanup # https://stackoverflow.com/questions/39930171/cache-brew-builds-with-travis-ci
cache:
  bundler: true
  apt: true
  pip: true
  directories:
    - $TRAVIS_BUILD_DIR/spec/support/vim_plugins
    - $HOME/.rvm
      # https://stackoverflow.com/questions/39930171/cache-brew-builds-with-travis-ci
    - $HOME/Library/Caches/Homebrew
    - /usr/local/Homebrew

before_install:
  # https://docs.travis-ci.com/user/languages/ruby/#bundler-20
  - yes | gem update --system --force
  - gem install bundler
install:
  - |
    [ "$LINTER" = vim ] && pip3 install vim-vint==0.3.21 && return
    [ "$LINTER" = ruby ] && bundle install && return

    bundle install
    sh spec/support/bin/install_vim_dependencies.sh "$TRAVIS_BUILD_DIR/spec/support/vim_plugins"
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      sh spec/support/bin/install_osx.sh
      mvim --version
    else
      sh spec/support/bin/install_linux.sh
      vim --version
    fi
    ack --version
    ag --version
    git --version
    grep --version
    pt --version
    rg --version

before_script:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then (( sudo Xvfb :99 -ac -screen 0 1024x768x8; echo ok) &); sleep 5; fi
    # - if [ "$TRAVIS_OS_NAME" = "linux" ]; then DISPLAY=":99.0" sh -e /etc/init.d/xvfb start; sleep 5 fi

after_failure:
  - env
  - ls -lah /usr/local/bin

jobs:
  include:
    # OSX acceptance
    - name: 'Acceptance tests of #backend#system'
      script: bundle exec rspec --tag system
      os: osx
    - name: 'Acceptance tests of #backend#vim8'
      script: bundle exec rspec --tag vim8
      os: osx
    - name: 'Acceptance tests of #backend#vimproc'
      script: bundle exec rspec --tag vimproc --seed 53149
      os: osx

    # Linux acceptance
    - name: 'Acceptance tests of #backend#system'
      script: bundle exec rspec --tag system
      os: linux
    - name: 'Acceptance tests of #backend#vim8'
      script: bundle exec rspec --tag vim8
      os: linux
    - name: 'Acceptance tests of #backend#vimproc'
      script: bundle exec rspec --tag vimproc
      os: linux

      # Unit tests
    - name: 'Unit tests'
      script: bundle exec rspec --tag ~backend
      os: linux

      # Linters
    - name: 'Ruby and support shell files lint (Rubocop, shellcheck)'
      env: LINTER=ruby
      script:
        - bundle exec rubocop --display-cop-names
        - shellcheck spec/support/bin/*.sh # decided to not create another build
      os: linux
    - name: 'Viml lint (Vint, VimLint)'
      # VIMLINT_IGNORE_JOB_CONTROL_WARNINGS are ignored.  TODO figure out why,
      # until that VIMLINT_WARNING_UNUSED_ARGUMENTS_AND_VARIABLES_WORKAROUND
      # will be used. Seems, similar problem happens with
      # VIMLINT_IGNORE_UNDERSCORED_VARIABLE_NAME
      env:
        LINTER=vim
        VIML_DIRECTORIES='autoload nerdtree_plugin plugin syntax'
        VIMLINT_IGNORE_JOB_CONTROL_WARNINGS='-e EVL103.a:channel=1 -e EVL103.a:event=1 -e EVL103.a:job=1 -e EVL103.a:pty=1 -e EVL103.a:timer=1'
        VIMLINT_WARNING_UNUSED_ARGUMENTS_AND_VARIABLES_WORKAROUND='-e EVL103=3'
        TODO_VIMLINT_WARNING_UNUSED_LOCAL_VARIABLES='-e EVL102=3'
        TODO_VIMLINT_WARNING_SCIPT_ENCODINGS='-e EVL205=3'
        VIMLINT_IGNORE_UNDERSCORED_VARIABLE_NAME='-e EVL102.l:_=1'
        VIMLINT_FAIL_EXIT_STATUS_IF_ERRORS='| tee /dev/tty | grep --color ":Error:"'
      before_script:
        - git clone https://github.com/syngan/vim-vimlint /tmp/vim-vimlint
        - git clone https://github.com/ynkdir/vim-vimlparser /tmp/vim-vimlparser
      script:
        - sh /tmp/vim-vimlint/bin/vimlint.sh -l /tmp/vim-vimlint -p /tmp/vim-vimlparser
            $VIMLINT_WARNING_UNUSED_ARGUMENTS_AND_VARIABLES_WORKAROUND
            $TODO_VIMLINT_WARNING_UNUSED_LOCAL_VARIABLES
            $TODO_VIMLINT_WARNING_SCIPT_ENCODINGS
            $VIML_DIRECTORIES
            $VIMLINT_FAIL_EXIT_STATUS_IF_ERRORS
        - "vint $VIML_DIRECTORIES"
      language: python
      # From logs: The `pip3' command exists in these Python versions:
      # 3.6.7, 3.7, 3.7.1
      python: 3.7
      os: linux
