Execute:
  if !isdirectory('spec/fixtures/jumps/dir/')
    call mkdir('spec/fixtures/jumps/dir/', 'p')
  endif
  for i in range(1, 3)
    call mkdir('spec/fixtures/jumps/dir'.i, 'p')
    exe 'edit spec/fixtures/jumps/dir'.i.'/file'.i.'.txt'
    %delete
    call setline(1, ['line'.i])
    write
  endfor
  set virtualedit=onemore

Before:
  let g:params = {
  \ 'backend': 'system',
  \ 'pattern': '.',
  \ 'regex': 1,
  \ 'adapter': 'rg',
  \ 'adapters': {'rg': {'options': '--sort path'}},
  \ 'live_update': 0,
  \ 'cwd': 'spec/fixtures/jumps/',
  \ 'root_markers': [],
  \}
  call esearch#init(g:params)

Execute (with "(" jump to filename 1 from the header):
  exe 'norm gg('
Then:
  AssertEqual getline('.'), 'dir1/file1.txt'
  AssertEqual col('.'), len('dir1/')

Execute (with "(" jump to filename 1 from filename 1):
  exe 'norm 3gg('
Then:
  AssertEqual getline('.'), 'dir1/file1.txt'
  AssertEqual col('.'), len('dir1/')

Execute (with "(" jump to filename 1 from file 1 entry 1):
  exe 'norm 4gg('
Then:
  AssertEqual getline('.'), 'dir1/file1.txt'
  AssertEqual col('.'), len('dir1/')

Execute (with "(" jump to filename 2 from file 3 entry 1):
  exe 'norm G('
Then:
  AssertEqual getline('.'), 'dir2/file2.txt'
  AssertEqual col('.'), len('dir2/')

Execute (with ")" jump to filename 2 from filename 3):
  exe 'norm G('
Then:
  AssertEqual getline('.'), 'dir2/file2.txt'
  AssertEqual col('.'), len('dir2/')

Execute (with ")" jump to filename 2 from the header):
  exe 'norm gg)'
Then:
  AssertEqual getline('.'), 'dir2/file2.txt'
  AssertEqual col('.'), len('dir2/')

Execute (with ")" jump to filename 2 from filename 1):
  exe 'norm 3gg)'
Then:
  AssertEqual getline('.'), 'dir2/file2.txt'
  AssertEqual col('.'), len('dir2/')

Execute (with ")" jump to filename 1 from file 1 entry 1):
  exe 'norm 4gg)'
Then:
  AssertEqual getline('.'), 'dir2/file2.txt'
  AssertEqual col('.'), len('dir2/')

Execute (with "(" jump to filename 3 from file 3 entry 1):
  exe 'norm G)'
Then:
  AssertEqual getline('.'), 'dir3/file3.txt'
  AssertEqual col('.'), len('dir3/')

Execute (with ")" jump to filename 3 from filename 3):
  exe 'norm Gk)'
Then:
  AssertEqual getline('.'), 'dir3/file3.txt'
  AssertEqual col('.'), len('dir3/')

Execute (with ")" stay visual mode):
  exe 'norm gg0v))'
Then:
  AssertEqual mode(), 'v'
  AssertEqual getline('.'), 'dir3/file3.txt'
  AssertEqual col('.'), len('dir3/')
  AssertEqual getpos("'<")[1:2], [1, 1]

Execute (with "(" stay visual mode):
  exe 'norm G$v(('
Then:
  AssertEqual mode(), 'v'
  AssertEqual getline('.'), 'dir1/file1.txt'
  AssertEqual col('.'), len('dir1/')
  AssertEqual getpos("'>")[1:2], [line('$'), len(getline('$'))]

Execute (with ")" in operator mode):
  exe 'norm 3gg0d)'
Then:
  AssertEqual getcurpos()[1:2], [3, 1]

Expect:
  Matches in 3 lines, 3 files. Finished.

  /file2.txt
     1 line2

  dir3/file3.txt
     1 line3

Execute (with ")" in operator mode):
  exe 'norm G$ld('
Then:
  AssertEqual getcurpos()[1:2], [line('$'), len(getline('$')) + 1]

Expect:
  Matches in 3 lines, 3 files. Finished.

  dir1/file1.txt
     1 line1

  dir2
