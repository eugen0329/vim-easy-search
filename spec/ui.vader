Include: helper.vader

Before:
  Save g:esearch
  let g:esearch.cwd = 'spec/fixtures/ui'.g:test_number.next().'/'
  call extend(g:esearch, {'paths': '', 'adapter': 'rg'})
  call esearch#config#eager()
  call esearch#middleware#adapter#apply(g:esearch)
  let Context = esearch#ui#context()
  fu! Reducer(state, action) abort
  endfu

  fu! Provide(state) abort
    let store = esearch#ui#create_store(function('Reducer'), a:state)
    let context = g:Context.new().provide({'store': store})
  endfu
  let g:ConfigurationsPrompt = esearch#ui#prompt#configurations#import()

  let g:icon = g:esearch#cmdline#dir_icon
  let g:file = g:esearch.cwd.'file.txt'
  let g:dir = g:esearch.cwd.'dir'

After:
  Restore g:esearch

Execute(ConfigurationsPrompt):
  call Fixture(file, [''])
  call mkdir(dir, 'p')

  let g:esearch.paths = esearch#shell#split('file.txt dir missing-dir /tmp')[0]
  let g:esearch.filetypes = 'undefined-filetype sql'
  call Provide(g:esearch)
  AssertEqual ConfigurationsPrompt.new().render(),
  \ [
  \ ['NONE', 'In '],
  \ ['NONE', '<.undefined-filetype>'],
  \ ['NONE', ' '],
  \ ['Typedef', '<.sql>'],
  \ ['NONE', ' '],
  \ ['Directory', icon.g:esearch.cwd],
  \ ['NONE', '/{ '],
  \ ['NONE', 'file.txt'],
  \ ['NONE', ', '],
  \ ['Directory', icon.'dir'],
  \ ['NONE', ', '],
  \ ['NONE', 'missing-dir'],
  \ ['NONE', ' }'],
  \ ['NONE', ' '],
  \ ['Directory', icon.'/tmp']
  \ ]
